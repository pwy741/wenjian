{
    "notice": "所有规则已迁移至个人分类仓库，有问题可联系我，QQ：491978656",
    "picUrl":"",
    "data": [
{
    "title":"香雅情的仓库",
    "author":"香雅情",
    "version":2,
    "updateText":"随Reborn大佬的模板更新而更新。",
    "tips":"我的个人分类仓库，所有规则都在这。",
    "rule":"rule://5rW36ZiU6KeG55WM6KeE5YiZ5YiG5Lqr77yM5b2T5YmN5YiG5Lqr55qE5piv77ya6aaW6aG16aKR6YGT77yM6aaZ4piG6ZuF4piG5oOF77+laG9tZV9ydWxl77+leyJmaXJzdEhlYWRlciI6ImNsYXNzIiwidGl0bGUiOiLpppnpm4Xmg4XnmoTku5PlupMiLCJhdXRob3IiOiLpppnpm4Xmg4UiLCJ1cmwiOiJoaWtlcjovL2hvbWUjZnlBbGwiLCJ2ZXJzaW9uIjoyLCJjb2xfdHlwZSI6InRleHRfMSIsImNsYXNzX25hbWUiOiLlhY3ll4Um5ZeF5o6iJui1hOa6kOe9kSbop4blkKwm5YW25a6DIiwiY2xhc3NfdXJsIjoi6aaZ6ZuF5oOFQEBhcGlUeXBlPScwJ0BAZnVsbFVybD0naHR0cHM6Ly9naXRlZS5jb20vbHprMjM1NTkvcnVsZWhvdXNlL3Jhdy9tYXN0ZXIvbWlhbnh0Lmpzb24nXG4m6aaZ6ZuF5oOFQEBhcGlUeXBlPScwJ0BAZnVsbFVybD0naHR0cHM6Ly9naXRlZS5jb20vbHprMjM1NTkvcnVsZWhvdXNlL3Jhdy9tYXN0ZXIvbm9taWFueHQuanNvbidcbibpppnpm4Xmg4VAQGFwaVR5cGU9JzAnQEBmdWxsVXJsPSdodHRwczovL2dpdGVlLmNvbS9semsyMzU1OS9ydWxlaG91c2UvcmF3L21hc3Rlci96eXcuanNvbidcbibpppnpm4Xmg4VAQGFwaVR5cGU9JzAnQEBmdWxsVXJsPSdodHRwczovL2dpdGVlLmNvbS9semsyMzU1OS9ydWxlaG91c2UvcmF3L21hc3Rlci9zaGl0aW5nLmpzb24nXG4m6aaZ6ZuF5oOFQEBhcGlUeXBlPScwJ0BAZnVsbFVybD0naHR0cHM6Ly9naXRlZS5jb20vbHprMjM1NTkvcnVsZWhvdXNlL3Jhdy9tYXN0ZXIvb3RoZXIuanNvbiciLCJhcmVhX25hbWUiOiIiLCJhcmVhX3VybCI6IiIsInllYXJfbmFtZSI6IiIsInllYXJfdXJsIjoiIiwiZmluZF9ydWxlIjoianM6XG52YXIgcmVzID0ge307XG52YXIgZCA9IFtdO1xudmFyIG1SdWxlID0gSlNPTi5wYXJzZShnZXRSdWxlKCkpO1xuXG52YXIgc2V0dGluZ3MgPSB7XG4gICAgLy8g5Y6L57yp5paH5pys5byA5YWz77yM5Y2z6KeE5YiZIOaPkOekui/mm7TmlrDml6Xlv5cg5LiN56m66KGM77yM5Lul5ZCO5Y+v6IO96L+Y5pyJ5YW25LuWXG4gICAgY29tcHJlc3NUZXh0OiB0cnVlLFxuICAgIC8vIOiuvue9riB0cnVlIOS4gOmUruWHgOWMlu+8jOmZpOS6huinhOWImeWSjOS7k+W6k+mAmuefpe+8jOWVpeS5n+S4jeimgVxuICAgIGhpZGVBbGw6IGZhbHNlLFxuICAgIC8vIOinhOWImeaVsOmHj+aYvuekuuW8gOWFs++8jOS4jemcgOimgeaYvuekuuivt+iuvue9ruS4unRydWVcbiAgICBub1J1bGVzTnVtOiBmYWxzZSxcbiAgICAvLyDmmK/lkKblhYHorrjotoXov4fkuIDlrprop4TliJnmlbDlkI7mlLnlj5jmmL7npLrmoLflvI/vvIzpu5jorqTkuI3lvIDlkK/vvIzopoHlvIDlp4vor7forr7nva7kuLogdHJ1ZVxuICAgIG5lZWRDaGFuZ2VTaG93VHlwZTogZmFsc2UsXG4gICAgLy8g6K6+572u5pyA5aSn5pi+56S65a6M5pW05paH5pys55qE6KeE5YiZ5pWw77yM5aSn5LqO6K6+572u5YC85YiZ5pi+56S65Li65oyJ6ZKu5qC35byPKOm7mOiupCB0ZXh0XzIpXG4gICAgc2hvd0Z1bGxUZXh0TWF4OiAxMCxcbiAgICAvLyDorr7nva7otoXov4flhYHorrjmmL7npLrlrozmlbTmlofmnKznmoTop4TliJnmlbDlkI7mmL7npLrnmoTmoLflvI9cbiAgICBvdmVyTWF4U2hvd1R5cGU6IFwidGV4dF8yXCIsXG4gICAgLyoqXG4gICAgICog6KeE5YiZ5pig5bCE5YiX6KGoXG4gICAgICog5bem5pys5Zyw77yM5Y+z6L+c56uv77yM5pys5Zyw5pig5bCE5Li66L+c56uv77yM6L6+5Yiw5pu/5o2i5YaF5a6555qE55uu55qEXG4gICAgICog6ZyA6KaB5YWo5ZCN5Yy56YWN6ZyA6KaB5Zyo5pig5bCE6KGo5Lit5Yqg5YWleyBcIm1hdGNoQWxsXCI6IHRydWUgfVxuICAgICAqIO+8iOazqOaEj++8jOeoi+W6j+mAu+i+keS4uuWFiOaYoOWwhOWQjuaJp+ihjOS4i+mdoueahOWIoOmZpOagh+iusO+8iVxuICAgICAqL1xuICAgIHJ1bGVzTWFwcGluZzogW1xuICAgICAgICAvLyBbe1widGl0bGVcIjogXCLll6jlk4blkqpcIiwgXCJhdXRob3JcIjogXCLlj5HnsqrmtoLloplcIn0sIHtcInRpdGxlXCI6IFwi5Zeo5ZOa5ZKq5b2x6KeGXCIsIFwiYXV0aG9yXCI6IFwi5Y+R57Kq5raC5aKZXCJ9LCB7XCJtYXRjaEFsbFwiOiB0cnVlfV0sXG4gICAgICAgIC8vIFt7XCJ0aXRsZVwiOiBcIumihOWRiueJh1wiLCBcImF1dGhvclwiOiBcIlJlYm9yblwifSwge1widGl0bGVcIjogXCLpooTlkYrniYcoPz3igKJSZSlcIiwgXCJhdXRob3JcIjogXCJSZWJvcm5cIn1dLFxuICAgICAgICAvLyBbe1widGl0bGVcIjogXCLpooTlkYrniYfigKJUXCIsIFwiYXV0aG9yXCI6IFwiUmVib3JuXCJ9LCB7XCJ0aXRsZVwiOiBcIumihOWRiueJh+KAolJlXCIsIFwiYXV0aG9yXCI6IFwiUmVib3JuXCJ9LCB7XCJtYXRjaEFsbFwiOiB0cnVlfV0sXG4gICAgICAgIC8vIFt7XCJ0aXRsZVwiOiBcIi4qPyg/PeKAolQpXCIsIFwiYXV0aG9yXCI6IFwiUmVib3JuXCJ9LCB7XCJ0aXRsZVwiOiBcIi4qPyg/PeKAolJlKVwiLCBcImF1dGhvclwiOiBcIlJlYm9yblwifV0sXG4gICAgICAgIC8vIFt7XCJ0aXRsZVwiOiBcIi4qPyg/PeKAokIpXCIsIFwiYXV0aG9yXCI6IFwiUmVib3JuXCJ9LCB7XCJ0aXRsZVwiOiBcIi4qPyg/PeKAolJlKVwiLCBcImF1dGhvclwiOiBcIlJlYm9yblwifV1cbiAgICBdLFxuICAgIC8vIOS6keerr+inhOWImeaYoOWwhOWIl+ihqOmTvuaOpe+8jOagvOW8j+aYr0pTT07mlbDnu4TvvIzor7foh6rlt7Horr7nva5cbiAgICByZW1vdGVSdWxlc01hcHBpbmdVcmw6IFwiXCIsXG5cbiAgICAvLyDlhaXmiI/lvIDlhbPvvJ/vvIjmu5HnqL3vvIkvLyDliKDpmaTlvIDlhbPvvIzkuI3pnIDopoHliKDpmaTor7forr7nva7kuLpmYWxzZVxuICAgIG5lZWREZWxTeW1ib2w6IHRydWUsXG4gICAgLy8g6Ieq6KGM5re75Yqg6KaB6KKr5Yig5o6J55qE5qCH6K6wXG4gICAgc3ltYm9sczogW1wi5qCH6K6wMVwiLCBcIuagh+iusDJcIl0sXG5cbiAgICAvLyDpmpDol4/lvIDlhbPvvIzkuI3pnIDopoHpmpDol4/or7forr7nva7kuLpmYWxzZVxuICAgIG5lZWRIaWRlUnVsZTogdHJ1ZSxcbiAgICAvLyDoh6rooYzmt7vliqDopoHpmpDol4/nmoTmoIforrDvvIzmoLzlvI/kuLrvvJpb5qCH6K6w5ZCNXVxuICAgIGhpZGVTeW1ib2xzOiBbXCJb5qih5p2/XVwiLCBcIlvmnKrlrozmiJBdXCJdLFxuXG4gICAgLy8g6Iul6ZyA6KaB5YWz6Zet5b+955Wl5pys5qyh5pu05paw6K+36K6+572u5Li6dHJ1ZVxuICAgIG5vSWdub3JlVXBkYXRlOiBmYWxzZSxcbiAgICAvLyDmnKzlnLDlv73nlaXmm7TmlrDliJfooajvvIxcbiAgICAvLyDlhoXlrrnmqKHmnb/kuLoge3RpdGxlOiBcIuinhOWImeWQjVwiLCBhdXRob3I6IFwi6KeE5YiZ5L2c6ICFXCJ9XG4gICAgaWdub3JlVXBkYXRlUnVsZUxpc3Q6IFtcbiAgICAgICAgLy8ge3RpdGxlOiBcIumihOWRiueJh+KAolJlXCIsIGF1dGhvcjogXCJSZWJvcm5cIn0sXG4gICAgXSxcbiAgICAvLyDkupHnq6/lv73nlaXmm7TmlrDliJfooajvvIzmoLzlvI/mmK9KU09O5pWw57uE77yM6K+36Ieq5bex6K6+572uXG4gICAgcmVtb3RlSWdub3JlTGlzdFVybDogXCJcIixcbiAgICAvLyDlj4LogIPpk77mjqXvvJpcbiAgICAvLyBodHRwczovL2dpdGVlLmNvbS9SZWJvcm5fMC9IaWtlclJ1bGVzRGVwb3QvcmF3L21hc3Rlci9pZ25vcmVVcGRhdGVSdWxlTGlzdC5qc29uXG4gICAgLy8gaHR0cHM6Ly9naXRlZS5jb20vcWl1c3Vuc2hpbmUyMzMvaGlrZXJWaWV3L3Jhdy9tYXN0ZXIvcnVsZXZlcnNpb24vUmVib3JuL2lnbm9yZVVwZGF0ZVJ1bGVMaXN0Lmpzb25cblxuICAgIC8vIOS4uuaJgOacieWIhuexu+a3u+WKoOivpeWIhuexu+S7k+W6k+abtOaWsOWKn+iDvVxuICAgIC8vIOmcgOimgeWDj+aAu+S7k+W6k+S4gOagt+WNleeLrOeUqOS4gOS4qmpzb27nrqHnkIbvvIzoh6rooYzloavlhaXlnLDlnYBcbiAgICByZW1vdGVEZXBvdFJ1bGVVcmw6IFwiXCIsXG4gICAgLy8g6Iul5LiN6ZyA6KaB5pu05paw5YiZ5YWz6ZetXG4gICAgc2hvd1VwZGF0ZUVycm9yVGlwczogZmFsc2UsXG59O1xuXG4vLyDku5PlupPnirbmgIHnvJPlrZjmlofku7blnLDlnYBcbnZhciBzdGF0dXNDYWNoZUZpbGUgPSBcImhpa2VyOi8vZmlsZXMvXCIgKyBtUnVsZS50aXRsZSArIFwiX1wiICsgbVJ1bGUuYXV0aG9yICsgXCIuanNvblwiO1xuLy8g5Li+5L6LIGhpa2VyOi8vZmlsZXMvZGVwb3RTdGF0dXMuanNvblxuXG52YXIgcmVtb3RlSWdub3JlTGlzdCA9IFtdO1xudHJ5IHtcbiAgICBldmFsKFwicmVtb3RlSWdub3JlTGlzdD1cIiArIGZldGNoKHNldHRpbmdzLnJlbW90ZUlnbm9yZUxpc3RVcmwsIHt9KSk7XG59IGNhdGNoIChlKSB7XG59XG5BcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShzZXR0aW5ncy5pZ25vcmVVcGRhdGVSdWxlTGlzdCwgcmVtb3RlSWdub3JlTGlzdCk7XG4vLyBzZXRFcnJvcihKU09OLnN0cmluZ2lmeShpZ25vcmVVcGRhdGVSdWxlTGlzdCkpO1xuXG52YXIgcmVtb3RlUnVsZXNNYXBwaW5nID0gW107XG50cnkge1xuICAgIGV2YWwoXCJyZW1vdGVSdWxlc01hcHBpbmc9XCIgKyBmZXRjaChzZXR0aW5ncy5yZW1vdGVSdWxlc01hcHBpbmdVcmwsIHt9KSk7XG59IGNhdGNoIChlKSB7XG59XG5BcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShzZXR0aW5ncy5ydWxlc01hcHBpbmcsIHJlbW90ZVJ1bGVzTWFwcGluZyk7XG4vLyBzZXRFcnJvcihKU09OLnN0cmluZ2lmeShydWxlc01hcHBpbmcpKTtcblxuLyoqXG4gKiDlj6/lnKjmraTlpIToh6rlrprkuYnku5PlupPvvIzlrp7njrDnp4Hkurrku5PlupNcbiAqXG4gKiDku6VSZWJvcm7ku5PlupPnmoTpk77mjqXkuLrlj4LogINcbiAqXG4gKiBodHRwczovL2dpdGVlLmNvbS9SZWJvcm5fMC9IaWtlclJ1bGVzRGVwb3QvYmxvYi9tYXN0ZXIvdXBkYXRlLmpzb25cbiAqL1xudmFyIGF1dGhvckxpc3QgPSBnZXRVcmwoKS5zcGxpdChcIiNcIilbMV07XG52YXIgYXV0aG9yQW5kT3duZXJBbmRQcm9qZWN0ID0gYXV0aG9yTGlzdC5zcGxpdChcIkBAXCIpO1xudmFyIGF1dGhvciA9IGF1dGhvckFuZE93bmVyQW5kUHJvamVjdFswXTtcbnZhciByZW1vdGVVcmwgPSBcIlwiO1xuXG52YXIgYXBpVHlwZSA9IFwiMVwiOyAgLy8gMCDkuLrmlofku7bnm7Tpk77vvIwxIOS4uueggeS6kUFQSVxudmFyIGFwaVR5cGVKUyA9IGF1dGhvckxpc3QubWF0Y2goL2FwaVR5cGU9LltcXHNcXFNdKj8nLykgKyBcIjtcIjtcbmV2YWwoYXBpVHlwZUpTKTtcbmlmIChhcGlUeXBlID09IG51bGwpIGFwaVR5cGUgPSBcIjFcIjtcblxuaWYgKGFwaVR5cGUgPT0gXCIwXCIpIHtcbiAgICB2YXIgZnVsbFVybCA9IFwiXCI7XG4gICAgdmFyIGZ1bGxVcmxKUyA9IGF1dGhvckxpc3QubWF0Y2goL2Z1bGxVcmw9LltcXHNcXFNdKj8nLykgKyBcIjtcIjtcbiAgICBldmFsKGZ1bGxVcmxKUyk7XG4gICAgcmVtb3RlVXJsID0gZnVsbFVybDtcbn0gZWxzZSBpZiAoYXBpVHlwZSA9PSBcIjFcIikge1xuICAgIHZhciByZW1vdGVBcGlIb21lID0gXCJodHRwczovL2dpdGVlLmNvbS9hcGkvdjUvcmVwb3MvXCI7XG4gICAgdmFyIG93bmVyID0gYXV0aG9yQW5kT3duZXJBbmRQcm9qZWN0WzFdOyAgIC8vIOS7k+W6k+aLpeacieiAhVxuICAgIHZhciByZXBvID0gYXV0aG9yQW5kT3duZXJBbmRQcm9qZWN0WzJdOyAvLyDku5PlupPlkI1cbiAgICB2YXIgcmVtb3RlRmlsZW5hbWUgPSBudWxsOyAvLyDmlofku7blkI1cbiAgICB2YXIgcGF0aCA9IHJlbW90ZUZpbGVuYW1lOyAgLy8g5Zyo5LuT5bqT5Lit5paH5Lu255qE6Lev5b6EXG4gICAgdmFyIGFjY2Vzc190b2tlbiA9IG51bGw7ICAvLyDnlKjmiLfmjojmnYPnoIHvvIzlnKjnoIHkupFcIuiuvue9ruKAlD7lronlhajorr7lrpotPuS4quS6uuiuv+mXruS7pOeJjFwi5Lit5Y+v5Lul55Sf5oiQXG4gICAgdmFyIHRva2VuSlMgPSBhdXRob3JMaXN0Lm1hdGNoKC9hY2Nlc3NfdG9rZW49LltcXHNcXFNdKj8nLykgKyBcIjtcIjtcbiAgICBldmFsKHRva2VuSlMpO1xuICAgIC8vIHNldEVycm9yKGFjY2Vzc190b2tlbj09bnVsbCk7XG4gICAgdmFyIHJlbW90ZUZpbGVuYW1lSlMgPSBhdXRob3JMaXN0Lm1hdGNoKC9yZW1vdGVGaWxlbmFtZT0uW1xcc1xcU10qPycvKSArIFwiO1wiO1xuICAgIGV2YWwocmVtb3RlRmlsZW5hbWVKUyk7XG4gICAgaWYgKHJlbW90ZUZpbGVuYW1lID09IG51bGwpIHtcbiAgICB9XG4gICAgcmVtb3RlRmlsZW5hbWUgPSBcInVwZGF0ZS5qc29uXCI7XG4gICAgcGF0aCA9IHJlbW90ZUZpbGVuYW1lO1xuICAgIC8vIHNldEVycm9yKHJlbW90ZUZpbGVuYW1lKVxuICAgIC8vIEFQSemTvuaOpeWPguiAg++8mmh0dHBzOi8vZ2l0ZWUuY29tL2FwaS92NS9yZXBvcy97e293bmVyfX0ve3tyZXBvfX0vY29udGVudHMve3twYXRofX0/YWNjZXNzX3Rva2VuPSoqKipcbiAgICByZW1vdGVVcmwgPSByZW1vdGVBcGlIb21lICsgb3duZXIgKyBcIi9cIiArIHJlcG8gKyBcIi9jb250ZW50cy9cIiArIHBhdGg7XG4gICAgaWYgKGFjY2Vzc190b2tlbiAhPSBudWxsKSB7XG4gICAgICAgIHJlbW90ZVVybCA9IHJlbW90ZVVybCArIFwiP2FjY2Vzc190b2tlbj1cIiArIGFjY2Vzc190b2tlbjtcbiAgICB9XG4gICAgLy8gc2V0RXJyb3IocmVtb3RlVXJsKTtcbiAgICAvLyB2YXIgcmVtb3RlSG9tZSA9IFwiaHR0cHM6Ly9naXRlZS5jb20vXCIgKyBvd25lciArIFwiL1wiICsgcmVwbyArIFwiL2Jsb2IvbWFzdGVyL3VwZGF0ZS5qc29uXCI7XG59XG5cbi8vIOaKiuaAu+S7k+W6k+eKtuaAgeWGmeWFpeaWh+S7tlxuZnVuY3Rpb24gd3JpdGVEZXBvdFN0YXR1c1RvRmlsZShkZXBvdFN0YXR1cykge1xuICAgIHdyaXRlRmlsZShzdGF0dXNDYWNoZUZpbGUsIEpTT04uc3RyaW5naWZ5KGRlcG90U3RhdHVzKSk7XG59XG5cbi8vIOiLpeS4jeaYr+esrOS4gOasoeS9v+eUqOaAu+S7k+W6k+WImemakOiXj+W8gOWPkeaWh+aho1xudmFyIGRlcG90U3RhdHVzID0ge307XG52YXIgZGVwb3RTdGF0dXNGaWxlID0gZmV0Y2goc3RhdHVzQ2FjaGVGaWxlLCB7fSk7XG5pZiAoZGVwb3RTdGF0dXNGaWxlICE9IFwiXCIpIHtcbiAgICBldmFsKFwiZGVwb3RTdGF0dXM9XCIgKyBkZXBvdFN0YXR1c0ZpbGUpO1xufVxuXG52YXIgZGVwb3RSdWxlc1N0YXR1cyA9IHtcbiAgICB1cGRhdGVOdW06IDAsXG4gICAgbm9JbXBvcnROdW06IDAsXG4gICAgaWdub3JlTnVtOiAwLFxuICAgIHVua25vd25UeXBlTnVtOiAwXG59O1xuXG52YXIgZW50ZXJUZXh0ID0gXCJcXG5cXG5cIjtcbmlmIChzZXR0aW5ncy5jb21wcmVzc1RleHQgPT0gdHJ1ZSkgZW50ZXJUZXh0ID0gXCJcXG5cIjtcblxuZnVuY3Rpb24gZ2V0UnVsZU5vU3ltYm9scyhydWxlLCBzeW1ib2xMaXN0KSB7XG4gICAgaWYgKHNldHRpbmdzLm5lZWREZWxTeW1ib2wgIT0gdHJ1ZSkgcmV0dXJuIHJ1bGU7XG4gICAgdmFyIHJ1bGVUZW1wID0gcnVsZTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbExpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHN5bWJvbFJlZyA9IG5ldyBSZWdFeHAoc3ltYm9sTGlzdFtpXSwgXCJnXCIpO1xuICAgICAgICBydWxlVGVtcC50aXRsZSA9IHJ1bGVUZW1wLnRpdGxlLnJlcGxhY2Uoc3ltYm9sUmVnLCBcIlwiKTtcbiAgICB9XG4vL3NldEVycm9yKEpTT04uc3RyaW5naWZ5KHJ1bGVUZW1wKSk7XG4gICAgcmV0dXJuIHJ1bGVUZW1wO1xufVxuXG5mdW5jdGlvbiBpc0hpZGVSdWxlKHJ1bGUpIHtcbiAgICBpZiAoc2V0dGluZ3MubmVlZEhpZGVSdWxlICE9IHRydWUpIHJldHVybiBmYWxzZTtcbiAgICAvLyBpZiAoaGlkZVN5bWJvbHMubGVuZ3RoID09IDApIHJldHVybiBmYWxzZTtcbiAgICB2YXIgcnVsZVRlbXAgPSBydWxlO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2V0dGluZ3MuaGlkZVN5bWJvbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHJ1bGVUZW1wLnRpdGxlLmluZGV4T2Yoc2V0dGluZ3MuaGlkZVN5bWJvbHNbaV0pICE9IC0xKSByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBnZXRSdWxlSW5BcnJheShydWxlcywgcnVsZSkge1xuICAgIGlmIChydWxlcyA9PSBudWxsIHx8IHJ1bGVzLmxlbmd0aCA9PSAwKSByZXR1cm4gbnVsbDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChydWxlc1tpXS50aXRsZSA9PSBydWxlLnRpdGxlICYmIHJ1bGVzW2ldLmF1dGhvciA9PSBhdXRob3IpIHJldHVybiBydWxlc1tpXTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5cbmZ1bmN0aW9uIGlzSWdub3JlVXBkYXRlUnVsZShydWxlKSB7XG4gICAgaWYgKGlzSW5BcnJheShzZXR0aW5ncy5pZ25vcmVVcGRhdGVSdWxlTGlzdCwgcnVsZSkgPT0gdHJ1ZSkge1xuICAgICAgICB2YXIgY2FjaGVJZ25vcmVSdWxlID0gZ2V0UnVsZUluQXJyYXkoZGVwb3RTdGF0dXMuaWdub3JlVXBkYXRlUnVsZUxpc3QsIHJ1bGUpO1xuICAgICAgICBpZiAoY2FjaGVJZ25vcmVSdWxlID09IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChkZXBvdFN0YXR1cy5pZ25vcmVVcGRhdGVSdWxlTGlzdCA9PSBudWxsKSBkZXBvdFN0YXR1cy5pZ25vcmVVcGRhdGVSdWxlTGlzdCA9IFtdO1xuICAgICAgICAgICAgY2FjaGVJZ25vcmVSdWxlID0ge1xuICAgICAgICAgICAgICAgIHRpdGxlOiBydWxlLnRpdGxlLFxuICAgICAgICAgICAgICAgIGF1dGhvcjogYXV0aG9yLFxuICAgICAgICAgICAgICAgIHZlcnNpb246IHJ1bGUudmVyc2lvblxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGRlcG90U3RhdHVzLmlnbm9yZVVwZGF0ZVJ1bGVMaXN0LnB1c2goY2FjaGVJZ25vcmVSdWxlKTtcbiAgICAgICAgICAgIHdyaXRlRGVwb3RTdGF0dXNUb0ZpbGUoZGVwb3RTdGF0dXMpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAocnVsZS52ZXJzaW9uICE9IGNhY2hlSWdub3JlUnVsZS52ZXJzaW9uKSB7XG4gICAgICAgICAgICAgICAgY2FjaGVJZ25vcmVSdWxlLnZlcnNpb24gPSBydWxlLnZlcnNpb247XG4gICAgICAgICAgICAgICAgd3JpdGVEZXBvdFN0YXR1c1RvRmlsZShkZXBvdFN0YXR1cyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHNldElnbm9yZVVwZGF0ZVJ1bGUocnVsZSkge1xuICAgIGlmIChpc0lnbm9yZVVwZGF0ZVJ1bGUocnVsZSkgPT0gdHJ1ZSkgcnVsZS5pc0lnbm9yZVVwZGF0ZSA9IHRydWU7XG59XG5cbnZhciBydWxlcyA9IFtdO1xuZXZhbChcInJ1bGVzPVwiICsgZ2V0UmVzQ29kZSgpKTtcbnZhciBteVJ1bGVzID0gW107XG5mb3IgKHZhciBpID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHJ1bGUgPSBydWxlc1tpXTtcbiAgICBpZiAocnVsZS5hdXRob3IgPT0gYXV0aG9yKSB7XG4gICAgICAgIG15UnVsZXMucHVzaChnZXRSdWxlTm9TeW1ib2xzKHJ1bGUsIHNldHRpbmdzLnN5bWJvbHMpKTtcbiAgICB9XG59XG4vLyBzZXRFcnJvcihKU09OLnN0cmluZ2lmeShteVJ1bGVzKSk7XG5cbi8vIOWmguaenOacrOWcsOayoeacieWImeaPkOekuuWvvOWFpeaWsOinhOWImVxuLy8g5Zug6YOo5YiG5omL5py65LiN5pSv5oyBZXM26K+t5rOV77yM5pWF5rOo6YeK5o6JXG4vKnZhciBteVJ1bGVzTWFwID0gbmV3IE1hcCgpO1xubXlSdWxlcy5tYXAocnVsZT0+e1xubXlSdWxlc01hcC5zZXQocnVsZS50aXRsZSwgdHJ1ZSk7XG59KTtcbi8vc2V0RXJyb3IobXlSdWxlc01hcC5nZXQoXCLohb7orq/igKJSZVwiKSk7Ki9cblxuLy8g5Y6f5aeL5pa55rOV77yM5q+U6L6D6ICX5pe2XG5mdW5jdGlvbiBpc0luQXJyYXkocnVsZXMsIHJ1bGUpIHtcbiAgICBpZiAocnVsZXMubGVuZ3RoID09IDApIHJldHVybiBmYWxzZTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChydWxlc1tpXS50aXRsZSA9PSBydWxlLnRpdGxlKSByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBnZXRSdWxlSW5SdWxlc1dpdGhNYXBwaW5nKHJ1bGVzLCBydWxlKSB7XG4gICAgaWYgKHJ1bGVzID09IG51bGwgfHwgcnVsZXMubGVuZ3RoID09IDAgfHwgcnVsZSA9PSBudWxsIHx8IHJ1bGUubWFwcGluZ1RpdGxlID09IG51bGwpIHJldHVybiBudWxsO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcnVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHJ1bGVzW2ldLm1hcHBpbmdUaXRsZSAhPSBudWxsICYmIHJ1bGVzW2ldLm1hcHBpbmdUaXRsZSA9PSBydWxlLm1hcHBpbmdUaXRsZSAmJiBydWxlc1tpXS5hdXRob3IgPT0gYXV0aG9yKSByZXR1cm4gcnVsZXNbaV07XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBpc0luUnVsZXNXaXRoTWFwcGluZyhydWxlcywgcnVsZSkge1xuICAgIGlmIChnZXRSdWxlSW5SdWxlc1dpdGhNYXBwaW5nKHJ1bGVzLCBydWxlKSAhPSBudWxsKSByZXR1cm4gdHJ1ZTtcbiAgICBlbHNlIHJldHVybiBmYWxzZTtcbn1cblxudmFyIGRlc2MgPSBmdW5jdGlvbiAocnVsZXMsIHJ1bGUpIHtcbiAgICBpZiAocnVsZSAhPSBudWxsICYmIHJ1bGUudmVyc2lvbiA8IDApIHtcbiAgICAgICAgZGVwb3RSdWxlc1N0YXR1cy51bmtub3duVHlwZU51bSArPSAxO1xuICAgICAgICByZXR1cm4gXCLku5PlupPml6Dms5Xmo4DmtYvor6Xop4TliJnnsbvlnovvvIzor7figJjigJjnnIvop4TliJnmm7TmlrDml7bpl7TigJnigJlcIjtcbiAgICB9XG4gICAgaWYgKGlzSW5SdWxlc1dpdGhNYXBwaW5nKHJ1bGVzLCBydWxlKSA9PSB0cnVlIHx8IGlzSW5BcnJheShydWxlcywgcnVsZSkgPT0gdHJ1ZSkge1xuICAgICAgICBpZiAocnVsZS5vbGRWZXJzaW9uICE9IG51bGwgJiYgcnVsZS5vbGRWZXJzaW9uIDwgcnVsZS52ZXJzaW9uKSB7XG4gICAgICAgICAgICBkZXBvdFJ1bGVzU3RhdHVzLnVwZGF0ZU51bSArPSAxO1xuICAgICAgICAgICAgcmV0dXJuIChcIuKAmOKAmOacieaWsOeJiOacrO+8mlwiICsgcnVsZS52ZXJzaW9uICsgXCLigJnigJnvvIzngrnlh7vlr7zlhaXmlrDniYjmnKxcIilcbiAgICAgICAgICAgICAgICArIChcbiAgICAgICAgICAgICAgICAgICAgZW50ZXJUZXh0ICsgXCJb5pu05paw5pel5b+XXSBcIlxuICAgICAgICAgICAgICAgICAgICArIChcbiAgICAgICAgICAgICAgICAgICAgICAgIHJ1bGUudXBkYXRlVGV4dCA9PSBudWxsID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIuaXoFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBydWxlLnVwZGF0ZVRleHRcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICArIChcbiAgICAgICAgICAgICAgICAgICAgICAgIHJ1bGUudGlwcyAhPSBudWxsICYmIHJ1bGUudGlwcyAhPSBcIlwiID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRlclRleHQgKyBcIlRpcHM6IFwiICsgcnVsZS50aXBzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcIlwiXG4gICAgICAgICAgICAgICAgICAgICkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHJ1bGUub2xkVmVyc2lvbiA+IHJ1bGUudmVyc2lvbiA/XG4gICAgICAgICAgICAgICAgXCLigJjigJjllrXvvJ/kuLrllaXkvaDnmoTop4TliJnniYjmnKzmr5TmiJHov5jpq5jvvJ/igJnigJlcIlxuICAgICAgICAgICAgICAgIDogXCLlvZPliY3op4TliJnlt7LmmK/mnIDmlrDniYjvvIzngrnlh7vot7PliLDop4TliJnpobVcIlxuICAgICAgICAgICAgICAgICsgKFxuICAgICAgICAgICAgICAgICAgICBydWxlLnRpcHMgIT0gbnVsbCAmJiBydWxlLnRpcHMgIT0gXCJcIiA/XG4gICAgICAgICAgICAgICAgICAgICAgICBlbnRlclRleHQgKyBcIlRpcHM6IFwiICsgcnVsZS50aXBzXG4gICAgICAgICAgICAgICAgICAgICAgICA6IFwiXCJcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZGVwb3RSdWxlc1N0YXR1cy5ub0ltcG9ydE51bSArPSAxO1xuICAgICAgICByZXR1cm4gXCLigJjigJjkvaDlsJrmnKrlr7zlhaXor6Xop4TliJnigJnigJnvvIzngrnlh7vlr7zlhaVcIlxuICAgICAgICAgICAgKyAoXG4gICAgICAgICAgICAgICAgcnVsZS50aXBzICE9IG51bGwgJiYgcnVsZS50aXBzICE9IFwiXCIgP1xuICAgICAgICAgICAgICAgICAgICBlbnRlclRleHQgKyBcIlRpcHM6IFwiICsgcnVsZS50aXBzIDpcbiAgICAgICAgICAgICAgICAgICAgXCJcIlxuICAgICAgICAgICAgKTtcbiAgICB9XG59O1xuXG50cnkge1xuICAgIHZhciByZW1vdGVEZXBvdFJ1bGUgPSB7fTtcbiAgICBldmFsKFwicmVtb3RlRGVwb3RSdWxlPVwiICsgZmV0Y2goc2V0dGluZ3MucmVtb3RlRGVwb3RSdWxlVXJsLCB7fSkpO1xuICAgIHZhciBsb2NhbERlcG90UnVsZSA9IEpTT04ucGFyc2UoZ2V0UnVsZSgpKTtcbiAgICByZW1vdGVEZXBvdFJ1bGUub2xkVmVyc2lvbiA9IGxvY2FsRGVwb3RSdWxlLnZlcnNpb247XG4vL3NldEVycm9yKEpTT04uc3RyaW5naWZ5KGxvY2FsRGVwb3RSdWxlKSk7XG4vL3NldEVycm9yKEpTT04uc3RyaW5naWZ5KHJlbW90ZURlcG90UnVsZSkpO1xuICAgIGlmIChyZW1vdGVEZXBvdFJ1bGUub2xkVmVyc2lvbiA8IHJlbW90ZURlcG90UnVsZS52ZXJzaW9uKSB7XG4gICAgICAgIGQucHVzaCh7XG4gICAgICAgICAgICB0aXRsZTogXCLigJjigJjmnInmlrDniYjmnKzvvJpcIiArIHJlbW90ZURlcG90UnVsZS52ZXJzaW9uICsgXCLigJnigJnvvIzngrnlh7vlr7zlhaXmlrDniYjmnKxcIixcbi8vIHJlbW90ZURlcG90UnVsZS50aXRsZSArIFwiXFx0XCIgKyBkZXNjKHJ1bGVzLCByZW1vdGVEZXBvdFJ1bGUpLFxuICAgICAgICAgICAgdXJsOiByZW1vdGVEZXBvdFJ1bGUucnVsZSB8fCBcIlwiLFxuICAgICAgICAgICAgY29sX3R5cGU6IFwidGV4dF9jZW50ZXJfMVwiLFxuICAgICAgICAgICAgLy9jb250ZW50OiByZW1vdGVEZXBvdFJ1bGUudXBkYXRlVGV4dCxcbiAgICAgICAgICAgIGRlc2M6IFwi44CQ5pu05paw5pel5b+X44CRXFxuXCIgKyByZW1vdGVEZXBvdFJ1bGUudXBkYXRlVGV4dFxuICAgICAgICB9KTtcbiAgICB9XG59IGNhdGNoIChlKSB7XG4gICAgaWYgKHNldHRpbmdzLnNob3dVcGRhdGVFcnJvclRpcHMgPT0gdHJ1ZSlcbiAgICAgICAgZC5wdXNoKHtcbiAgICAgICAgICAgIHRpdGxlOiBcIuKAmOKAmOaAu+S7k+W6k+abtOaWsOeoi+W6j+W3suaNn+Wdj+KAmeKAmVwiLFxuICAgICAgICAgICAgZGVzYzogXCLor7fogZTns7sgXCIgKyBtUnVsZS5hdXRob3IgKyBcIiDkv67lpI1cIixcbiAgICAgICAgICAgIGNvbF90eXBlOiBcInRleHRfY2VudGVyXzFcIixcbiAgICAgICAgfSk7XG59XG5cbnZhciByZW1vdGVSdWxlcyA9IFtdO1xuLy8gdmFyIHJlbW90ZVVybCA9IHJlbW90ZUFwaUhvbWUgKyBlbmNvZGVVUklDb21wb25lbnQoYXV0aG9yKSArIFwiL1wiICsgcmVtb3RlRmlsZW5hbWU7XG52YXIgcmVtb3RlU291cmNlID0gZmV0Y2gocmVtb3RlVXJsLCB7fSk7XG4vLyBzZXRFcnJvcihyZW1vdGVVcmwpO1xudHJ5IHtcbiAgICBldmFsKFwicmVtb3RlU291cmNlPVwiICsgcmVtb3RlU291cmNlKTtcbiAgICBpZiAoYXBpVHlwZSA9PSBcIjBcIikge1xuICAgICAgICByZW1vdGVSdWxlcyA9IHJlbW90ZVNvdXJjZTtcbiAgICB9IGVsc2UgaWYgKGFwaVR5cGUgPT0gXCIxXCIpIHtcbiAgICAgICAgZXZhbChcInJlbW90ZVJ1bGVzPVwiICsgYmFzZTY0RGVjb2RlKHJlbW90ZVNvdXJjZS5jb250ZW50KSk7XG4gICAgfVxuICAgIGlmIChyZW1vdGVSdWxlcy5kYXRhICE9IG51bGwpIHtcbiAgICAgICAgdmFyIG5vdGljZSA9IHJlbW90ZVJ1bGVzLm5vdGljZTtcbiAgICAgICAgaWYgKG5vdGljZSAhPSBudWxsKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIChub3RpY2UpID09IFwic3RyaW5nXCIgJiYgbm90aWNlICE9IFwiXCIpIHtcbiAgICAgICAgICAgICAgICBkLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogXCLku5PlupPpgJrnn6VcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzYzogbm90aWNlLFxuICAgICAgICAgICAgICAgICAgICBjb2xfdHlwZTogXCJwaWNfMVwiXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiAobm90aWNlKSA9PSBcIm9iamVjdFwiICYmIG5vdGljZS5kZXNjICE9IG51bGwgJiYgbm90aWNlLmRlc2MgIT0gXCJcIikge1xuICAgICAgICAgICAgICAgIGQucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBub3RpY2UudGl0bGUgIT0gbnVsbCAmJiBub3RpY2UudGl0bGUgIT0gXCJcIiA/IG5vdGljZS50aXRsZSA6IFwi5LuT5bqT6YCa55+lXCIsXG4gICAgICAgICAgICAgICAgICAgIGRlc2M6IG5vdGljZS5kZXNjLFxuICAgICAgICAgICAgICAgICAgICBwaWNfdXJsOiBub3RpY2UucGljVXJsLFxuLy8gIT0gbnVsbCAmJiBub3RpY2UucGljVXJsICE9IFwiXCIgPyBub3RpY2UucGljVXJsIDogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6IFwicGljXzFcIlxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJlbW90ZVJ1bGVzID0gcmVtb3RlUnVsZXMuZGF0YTtcbiAgICB9XG59IGNhdGNoIChlKSB7XG59XG4vL3NldEVycm9yKHJlbW90ZVJ1bGVzLmxlbmd0aCk7XG5pZiAocmVtb3RlUnVsZXMubGVuZ3RoID09IDApIHtcbiAgICBkLnB1c2goe1xuICAgICAgICB0aXRsZTogXCLor6Xov5znqIvku5PlupPml6DmlbDmja7vvIFcIixcbiAgICAgICAgY29sX3R5cGU6IFwidGV4dF9jZW50ZXJfMVwiXG4gICAgfSk7XG4gICAgZC5wdXNoKHtcbiAgICAgICAgdGl0bGU6IFwi6K+l6L+c56iL5LuT5bqT5peg5pWw5o2u77yBXCIsXG4gICAgICAgIGNvbF90eXBlOiBcInRleHRfY2VudGVyXzFcIlxuICAgIH0pO1xuICAgIGQucHVzaCh7XG4gICAgICAgIHRpdGxlOiBcIuivpei/nOeoi+S7k+W6k+aXoOaVsOaNru+8gVwiLFxuICAgICAgICBjb2xfdHlwZTogXCJ0ZXh0X2NlbnRlcl8xXCJcbiAgICB9KTtcbn0gZWxzZSB7XG4gICAgLy9zZXRFcnJvcihteVJ1bGVzLmxlbmd0aCk7XG4gICAgaWYgKG15UnVsZXMubGVuZ3RoID49IHJlbW90ZVJ1bGVzLmxlbmd0aCkge1xuICAgICAgICAvLyDkuI3nn6XpgZPkvJrkuI3kvJrmnInpl67pophcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBteVJ1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJlbW90ZVJ1bGVzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxvY2FsUnVsZSA9IG15UnVsZXNbaV07XG4gICAgICAgICAgICAgICAgdmFyIHJlbW90ZVJ1bGUgPSByZW1vdGVSdWxlc1tqXTtcbiAgICAgICAgICAgICAgICBpZiAoaXNIaWRlUnVsZShyZW1vdGVSdWxlKSkge1xuICAgICAgICAgICAgICAgICAgICByZW1vdGVSdWxlcy5zcGxpY2UoaiwgMSk7XG4gICAgICAgICAgICAgICAgICAgIGotLTtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHNldElnbm9yZVVwZGF0ZVJ1bGUocmVtb3RlUnVsZSk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCBzZXR0aW5ncy5ydWxlc01hcHBpbmcubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vaWYgKChsb2NhbFJ1bGUubWFwcGluZ1RpdGxlICE9IG51bGwgJiYgcmVtb3RlUnVsZS5tYXBwaW5nVGl0bGUgIT0gbnVsbCkgfHwgcmVtb3RlUnVsZS5pc01hcHBlZCA9PSB0cnVlKSBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBydWxlTWFwcGluZyA9IHNldHRpbmdzLnJ1bGVzTWFwcGluZ1trXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsb2NhbFJ1bGVNYXBwaW5nVGl0bGUgPSBydWxlTWFwcGluZ1swXS50aXRsZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZW1vdGVSdWxlTWFwcGluZ1RpdGxlID0gcnVsZU1hcHBpbmdbMV0udGl0bGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDlhajlkI3mmKDlsIRcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsb2NhbFJ1bGUudGl0bGUgPT0gbG9jYWxSdWxlTWFwcGluZ1RpdGxlICYmIHJlbW90ZVJ1bGUudGl0bGUgPT0gcmVtb3RlUnVsZU1hcHBpbmdUaXRsZSAmJiBydWxlTWFwcGluZ1syXS5tYXRjaEFsbCA9PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxSdWxlLm1hcHBpbmdUaXRsZSA9IHJlbW90ZVJ1bGVNYXBwaW5nVGl0bGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlUnVsZS5tYXBwaW5nVGl0bGUgPSByZW1vdGVSdWxlTWFwcGluZ1RpdGxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGl0bGVSZWdleCA9IG5ldyBSZWdFeHAobG9jYWxSdWxlTWFwcGluZ1RpdGxlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbFJ1bGUubWFwcGluZ1RpdGxlID0gbG9jYWxSdWxlLm1hcHBpbmdUaXRsZSAhPSBudWxsICYmIGxvY2FsUnVsZS5tYXBwaW5nVGl0bGUgIT0gXCJcIiA/IGxvY2FsUnVsZS5tYXBwaW5nVGl0bGUgOiBsb2NhbFJ1bGUudGl0bGUubWF0Y2godGl0bGVSZWdleClbMF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGVSZWdleCA9IG5ldyBSZWdFeHAocmVtb3RlUnVsZU1hcHBpbmdUaXRsZSwgXCJnXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW90ZVJ1bGUubWFwcGluZ1RpdGxlID0gcmVtb3RlUnVsZS50aXRsZS5tYXRjaCh0aXRsZVJlZ2V4KVswXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsb2NhbFJ1bGUubWFwcGluZ1RpdGxlID09IHJlbW90ZVJ1bGUubWFwcGluZ1RpdGxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlUnVsZS5sb2NhbFRpdGxlID0gbG9jYWxSdWxlLnRpdGxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW90ZVJ1bGUuaXNNYXBwZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW90ZVJ1bGUub2xkVmVyc2lvbiA9IGxvY2FsUnVsZS52ZXJzaW9uO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGxvY2FsUnVsZS50aXRsZSA9PSByZW1vdGVSdWxlLnRpdGxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlbW90ZVJ1bGUub2xkVmVyc2lvbiA9IGxvY2FsUnVsZS52ZXJzaW9uO1xuICAgICAgICAgICAgICAgICAgICAvL3JlbW90ZVJ1bGVzW2pdLnJ1bGU9bXlSdWxlc1tpXS5ydWxlO1xuICAgICAgICAgICAgICAgICAgICAvL3JlbW90ZVJ1bGVzW2pdLmRlc2M9bXlSdWxlc1tpXS5kZXNjO1xuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVtb3RlUnVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciByZW1vdGVSdWxlID0gcmVtb3RlUnVsZXNbaV07XG4gICAgICAgICAgICBpZiAoKGlzSGlkZVJ1bGUocmVtb3RlUnVsZSkpKSB7XG4gICAgICAgICAgICAgICAgcmVtb3RlUnVsZXMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgICAgIGktLTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNldElnbm9yZVVwZGF0ZVJ1bGUocmVtb3RlUnVsZSk7XG4gICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IG15UnVsZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgbG9jYWxSdWxlID0gbXlSdWxlc1tqXTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IHNldHRpbmdzLnJ1bGVzTWFwcGluZy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9pZiAoKGxvY2FsUnVsZS5tYXBwaW5nVGl0bGUgIT0gbnVsbCAmJiByZW1vdGVSdWxlLm1hcHBpbmdUaXRsZSAhPSBudWxsKSB8fCByZW1vdGVSdWxlLmlzTWFwcGVkID09IHRydWUpIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJ1bGVNYXBwaW5nID0gc2V0dGluZ3MucnVsZXNNYXBwaW5nW2tdO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxvY2FsUnVsZU1hcHBpbmdUaXRsZSA9IHJ1bGVNYXBwaW5nWzBdLnRpdGxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlbW90ZVJ1bGVNYXBwaW5nVGl0bGUgPSBydWxlTWFwcGluZ1sxXS50aXRsZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWFqOWQjeaYoOWwhFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxvY2FsUnVsZS50aXRsZSA9PSBsb2NhbFJ1bGVNYXBwaW5nVGl0bGUgJiYgcmVtb3RlUnVsZS50aXRsZSA9PSByZW1vdGVSdWxlTWFwcGluZ1RpdGxlICYmIHJ1bGVNYXBwaW5nWzJdLm1hdGNoQWxsID09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbFJ1bGUubWFwcGluZ1RpdGxlID0gcmVtb3RlUnVsZU1hcHBpbmdUaXRsZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdGVSdWxlLm1hcHBpbmdUaXRsZSA9IHJlbW90ZVJ1bGVNYXBwaW5nVGl0bGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0aXRsZVJlZ2V4ID0gbmV3IFJlZ0V4cChsb2NhbFJ1bGVNYXBwaW5nVGl0bGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsUnVsZS5tYXBwaW5nVGl0bGUgPSBsb2NhbFJ1bGUubWFwcGluZ1RpdGxlICE9IG51bGwgJiYgbG9jYWxSdWxlLm1hcHBpbmdUaXRsZSAhPSBcIlwiID8gbG9jYWxSdWxlLm1hcHBpbmdUaXRsZSA6IGxvY2FsUnVsZS50aXRsZS5tYXRjaCh0aXRsZVJlZ2V4KVswXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZVJlZ2V4ID0gbmV3IFJlZ0V4cChyZW1vdGVSdWxlTWFwcGluZ1RpdGxlLCBcImdcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlUnVsZS5tYXBwaW5nVGl0bGUgPSByZW1vdGVSdWxlLnRpdGxlLm1hdGNoKHRpdGxlUmVnZXgpWzBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxvY2FsUnVsZS5tYXBwaW5nVGl0bGUgPT0gcmVtb3RlUnVsZS5tYXBwaW5nVGl0bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdGVSdWxlLmxvY2FsVGl0bGUgPSBsb2NhbFJ1bGUudGl0bGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlUnVsZS5pc01hcHBlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlUnVsZS5vbGRWZXJzaW9uID0gbG9jYWxSdWxlLnZlcnNpb247XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChsb2NhbFJ1bGUudGl0bGUgPT0gcmVtb3RlUnVsZS50aXRsZSkge1xuICAgICAgICAgICAgICAgICAgICByZW1vdGVSdWxlLm9sZFZlcnNpb24gPSBsb2NhbFJ1bGUudmVyc2lvbjtcbiAgICAgICAgICAgICAgICAgICAgLy9yZW1vdGVSdWxlc1tpXS5ydWxlPW15UnVsZXNbal0ucnVsZTtcbiAgICAgICAgICAgICAgICAgICAgLy9yZW1vdGVSdWxlc1tpXS5kZXNjPW15UnVsZXNbal0uZGVzYztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtZXJnZVNvcnQoYXJyKSB7XG4gICAgICAgIHZhciBsZW4gPSBhcnIubGVuZ3RoO1xuICAgICAgICBpZiAobGVuIDwgMikge1xuICAgICAgICAgICAgcmV0dXJuIGFycjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbWlkZGxlID0gTWF0aC5mbG9vcihsZW4gLyAyKSxcbiAgICAgICAgICAgIGxlZnQgPSBhcnIuc2xpY2UoMCwgbWlkZGxlKSxcbiAgICAgICAgICAgIHJpZ2h0ID0gYXJyLnNsaWNlKG1pZGRsZSk7XG4gICAgICAgIHJldHVybiBtZXJnZShtZXJnZVNvcnQobGVmdCksIG1lcmdlU29ydChyaWdodCkpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1lcmdlKGxlZnQsIHJpZ2h0KSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICAgICAgdmFyIGlnbm9yZVVwZGF0ZUxpc3QgPSBbXTtcbiAgICAgICAgdmFyIGlzVGhpc1ZlcnNpb25MaXN0ID0gW107XG5cbiAgICAgICAgd2hpbGUgKGxlZnQubGVuZ3RoID4gMCAmJiByaWdodC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBpZiAobGVmdFswXS5pc0lnbm9yZVVwZGF0ZSA9PSB0cnVlICYmIGxlZnRbMF0ub2xkVmVyc2lvbiAhPSBsZWZ0WzBdLnZlcnNpb24pIHtcbiAgICAgICAgICAgICAgICBpZ25vcmVVcGRhdGVMaXN0LnB1c2gobGVmdC5zaGlmdCgpKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocmlnaHRbMF0uaXNJZ25vcmVVcGRhdGUgPT0gdHJ1ZSAmJiByaWdodFswXS5vbGRWZXJzaW9uICE9IHJpZ2h0WzBdLnZlcnNpb24pIHtcbiAgICAgICAgICAgICAgICBpZ25vcmVVcGRhdGVMaXN0LnB1c2gocmlnaHQuc2hpZnQoKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGxlZnRbMF0ub2xkVmVyc2lvbiA8IGxlZnRbMF0udmVyc2lvbikge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGxlZnQuc2hpZnQoKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHJpZ2h0WzBdLm9sZFZlcnNpb24gPCByaWdodFswXS52ZXJzaW9uKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2gocmlnaHQuc2hpZnQoKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGxlZnRbMF0ub2xkVmVyc2lvbiA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2gobGVmdC5zaGlmdCgpKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocmlnaHRbMF0ub2xkVmVyc2lvbiA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2gocmlnaHQuc2hpZnQoKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlzVGhpc1ZlcnNpb25MaXN0LnB1c2gobGVmdC5zaGlmdCgpKTtcbiAgICAgICAgICAgICAgICBpc1RoaXNWZXJzaW9uTGlzdC5wdXNoKHJpZ2h0LnNoaWZ0KCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgd2hpbGUgKGlnbm9yZVVwZGF0ZUxpc3QubGVuZ3RoKSByZXN1bHQucHVzaChpZ25vcmVVcGRhdGVMaXN0LnNoaWZ0KCkpO1xuXG4gICAgICAgIHdoaWxlIChpc1RoaXNWZXJzaW9uTGlzdC5sZW5ndGgpIHJlc3VsdC5wdXNoKGlzVGhpc1ZlcnNpb25MaXN0LnNoaWZ0KCkpO1xuXG4gICAgICAgIHdoaWxlIChsZWZ0Lmxlbmd0aClcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKGxlZnQuc2hpZnQoKSk7XG5cbiAgICAgICAgd2hpbGUgKHJpZ2h0Lmxlbmd0aClcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHJpZ2h0LnNoaWZ0KCkpO1xuXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgcmVtb3RlUnVsZXMgPSBtZXJnZVNvcnQocmVtb3RlUnVsZXMpO1xuXG4gICAgdmFyIHNob3dSdWxlTGlzdCA9IFtdO1xuICAgIC8vIHNldEVycm9yKEpTT04uc3RyaW5naWZ5KHJlbW90ZVJ1bGVzKSk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZW1vdGVSdWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgaiA9IHJlbW90ZVJ1bGVzW2ldO1xuICAgICAgICB2YXIgcnVsZVdpdGhNYXBwaW5nID0gZ2V0UnVsZUluUnVsZXNXaXRoTWFwcGluZyhyZW1vdGVSdWxlcywgaik7XG4gICAgICAgIGlmIChydWxlV2l0aE1hcHBpbmcgIT0gbnVsbCAmJiBnZXRSdWxlSW5SdWxlc1dpdGhNYXBwaW5nKG15UnVsZXMsIGopKSBqID0gcnVsZVdpdGhNYXBwaW5nO1xuICAgICAgICB2YXIgciA9IHt9O1xuICAgICAgICBpZiAoc2V0dGluZ3MubmVlZENoYW5nZVNob3dUeXBlID09IHRydWUgJiYgai5vbGRWZXJzaW9uICE9IG51bGwgJiYgai5vbGRWZXJzaW9uID49IGoudmVyc2lvbiAmJiByZW1vdGVSdWxlcy5sZW5ndGggPiBzZXR0aW5ncy5zaG93RnVsbFRleHRNYXgpXG4gICAgICAgICAgICByLmNvbF90eXBlID0gc2V0dGluZ3Mub3Zlck1heFNob3dUeXBlO1xuICAgICAgICBpZiAoKHNldHRpbmdzLm5vSWdub3JlVXBkYXRlICE9IHRydWUgJiYgai5pc0lnbm9yZVVwZGF0ZSA9PSB0cnVlKSAmJiAoai5vbGRWZXJzaW9uID09IG51bGwgfHwgai5vbGRWZXJzaW9uIDwgai52ZXJzaW9uKSkge1xuICAgICAgICAgICAgZGVwb3RSdWxlc1N0YXR1cy5pZ25vcmVOdW0gKz0gMTtcbiAgICAgICAgICAgIHIuZGVzYyA9IFwi6K+l6KeE5YiZ5bey5b+955Wl5pys5qyh5pu05pawXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByLmRlc2MgPSBkZXNjKG15UnVsZXMsIGopO1xuICAgICAgICB9XG4gICAgICAgIHIudGl0bGUgPSBqLm1hcHBpbmdUaXRsZSAhPSBudWxsICYmIGoubWFwcGluZ1RpdGxlICE9IFwiXCIgJiYgai5pc01hcHBlZCA9PSB0cnVlID9cbiAgICAgICAgICAgIGoubWFwcGluZ1RpdGxlXG4gICAgICAgICAgICA6IGoudGl0bGU7XG4gICAgICAgIHIudXJsID0gai52ZXJzaW9uIDwgMCA/XG4gICAgICAgICAgICBqLnJ1bGUgfHwgXCJcIlxuICAgICAgICAgICAgOiBpc0luQXJyYXkobXlSdWxlcywgaikgfHwgai5pc01hcHBlZCA9PSB0cnVlID9cbiAgICAgICAgICAgICAgICAoai5vbGRWZXJzaW9uICE9IG51bGwgJiYgai5vbGRWZXJzaW9uIDwgai52ZXJzaW9uID9cbiAgICAgICAgICAgICAgICAgICAgKGoucnVsZSB8fCBcIlwiKVxuICAgICAgICAgICAgICAgICAgICA6IChcImhpa2VyOi8vaG9tZUBcIiArIChqLmxvY2FsVGl0bGUgIT0gbnVsbCAmJiBqLmxvY2FsVGl0bGUgIT0gXCJcIiA/XG4gICAgICAgICAgICAgICAgICAgICAgICBqLmxvY2FsVGl0bGVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogai50aXRsZSkpKVxuICAgICAgICAgICAgICAgIDogKGoucnVsZSB8fCBcIlwiKTtcbiAgICAgICAgLy9yLmNvbnRlbnQgPSBqLnVwZGF0ZVRleHQ7XG4gICAgICAgIHNob3dSdWxlTGlzdC5wdXNoKHIpO1xuICAgIH1cblxuICAgIGlmIChzZXR0aW5ncy5ub1J1bGVzTnVtICE9IHRydWUgJiYgc2V0dGluZ3MuaGlkZUFsbCAhPSB0cnVlKVxuICAgICAgICBkLnB1c2goe1xuICAgICAgICAgICAgdGl0bGU6IFwiPGI+6K+l5LuT5bqT5YWx5pyJIOKAmOKAmFwiICsgcmVtb3RlUnVsZXMubGVuZ3RoICsgXCLigJnigJkg5p2h6KeE5YiZPC9iPlwiICtcbiAgICAgICAgICAgICAgICBcIiAoXCJcbiAgICAgICAgICAgICAgICArIFwi5pu05pawOuKAmOKAmFwiICsgZGVwb3RSdWxlc1N0YXR1cy51cGRhdGVOdW1cbiAgICAgICAgICAgICAgICArIFwi4oCZ4oCZICDmnKrlr7zlhaU64oCY4oCYXCIgKyBkZXBvdFJ1bGVzU3RhdHVzLm5vSW1wb3J0TnVtXG4gICAgICAgICAgICAgICAgKyBcIuKAmeKAmSAg5b+955WlOuKAmOKAmFwiICsgZGVwb3RSdWxlc1N0YXR1cy5pZ25vcmVOdW1cbiAgICAgICAgICAgICAgICArIFwi4oCZ4oCZKVwiLFxuICAgICAgICAgICAgY29sX3R5cGU6IFwidGV4dF8xXCIsXG4gICAgICAgIH0pO1xuXG4gICAgd2hpbGUgKHNob3dSdWxlTGlzdC5sZW5ndGgpIGQucHVzaChzaG93UnVsZUxpc3Quc2hpZnQoKSlcbn1cblxucmVzLmRhdGEgPSBkO1xuc2V0SG9tZVJlc3VsdChyZXMpOyIsInNlYXJjaF91cmwiOiIiLCJ0aXRsZUNvbG9yIjoiI2ZmZjIwYzAwIiwiZ3JvdXAiOiLku5PlupPpm4blkIgiLCJzZWFyY2hGaW5kIjoiIiwiZGV0YWlsX2NvbF90eXBlIjoibW92aWVfMSIsImRldGFpbF9maW5kX3J1bGUiOiIiLCJzZGV0YWlsX2NvbF90eXBlIjoibW92aWVfMSIsInNkZXRhaWxfZmluZF9ydWxlIjoiIn0="
},{
    "title":"[模板]",
    "author":"香雅情",
    "version":1,
    "updateText":"暂无更新日志",
    "tips":"",
    "rule":"rule://"}

]
}