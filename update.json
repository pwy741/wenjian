{
    "notice": "所有规则已迁移至个人分类仓库，有问题可联系我，QQ：491978656",
    "picUrl":"",
    "data": [
{
    "title":"香雅情的仓库",
    "author":"香雅情",
    "version":6,
    "updateText":"随Reborn大佬的模板更新而更新。",
    "tips":"我的个人分类仓库，所有规则都在这。",
    "rule":"rule:"
},{
    "title":"[模板]",
    "author":"香雅情",
    "version":1,
    "updateText":"暂无更新日志",
    "tips":"",
    "rule":"rule://"}

]
}